{"version":3,"file":"static/js/3714.e973ef53.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/features-max.mjs"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { drag } from '../../motion/features/drag.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\nimport { domAnimation } from './features-animation.mjs';\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layout,\n};\n\nexport { domMax };\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","Feature","node","_classCallCheck","isMounted","_createClass","key","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","undefined","point","x","y","addDomEvent","eventName","handler","options","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","distance","a","b","Math","abs","distance2D","xDelta","yDelta","sqrt","pow","PanSession","handlers","_this","_ref","transformPagePoint","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","offset","timestamp","frameData","push","_objectSpread","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","frame","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","type","initialInfo","onSessionStart","removeListeners","pipe","window","cancelFrame","subtractPoint","_ref2","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","secondsToMilliseconds","time","millisecondsToSeconds","currentVelocity","Infinity","createLock","name","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","calcLength","axis","max","min","isNear","maxDistance","calcAxisDelta","source","origin","originPoint","mix","scale","isNaN","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeBox","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","_ref3","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","callback","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","values","has2DTranslate","z","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","_slicedToArray","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","instantAnimationState","isBezierDefinition","easing","Array","isArray","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","every","cubicBezierAsString","c","d","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","_loop","acceleratedValues","Set","createAcceleratedAnimation","valueName","onUpdate","onComplete","_objectWithoutProperties","_excluded","has","repeatDelay","repeatType","damping","resolveFinishedPromise","currentFinishedPromise","hasStopped","updateFinishedPromise","Promise","resolve","keyframes","_options$duration","duration","times","requiresPregeneratedKeyframes","sampleAnimation","animateValue","repeat","delay","state","done","pregeneratedKeyframes","t","sample","animation","element","_ref$delay","_ref$repeat","_ref$repeatType","keyframeOptions","_defineProperty","animate","fill","iterations","direction","animateStyle","owner","current","cancelAnimation","cancel","safeCancel","onfinish","set","getFinalKeyframe","then","reject","currentTime","newTime","speed","playbackRate","newSpeed","play","pause","stop","playState","autoplay","setWithVelocity","complete","finish","createInstantAnimation","setValue","noop","underDampedSpring","stiffness","restSpeed","keyframesTransition","getDefaultTransition","valueKey","transformProps","startsWith","isAnimatable","complex","maxDefaults","applyDefaultFilter","v","_v$slice$split","slice","split","_v$slice$split2","match","floatRegex","number","unit","replace","defaultValue","functionRegex","filter","getAnimatableNone","functions","join","defaultValueTypes","numberValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","test","isNone","getKeyframes","transition","isTargetAnimatable","_toConsumableArray","defaultOrigin","from","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","elapsed","keys","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","warning","HTMLElement","getProps","acceleratedAnimation","elementDragControls","WeakMap","VisualElementDragControls","visualElement","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","presenceContext","isPresent","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","parseFloat","animationState","setActive","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","render","panSession","getTransformPagePoint","startAnimation","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","next","applyConstraints","_this2","_this$getProps6","dragConstraints","prevConstraints","isRefObject","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","invariant","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","bounceStiffness","bounceDamping","inertia","timeConstant","restDelta","startAxisValueAnimation","all","start","_this4","dragKey","toUpperCase","props","externalMotionValue","getValue","initial","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","latest","sourceLength","targetLength","progress","clamp","calcOrigin","transformTemplate","style","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","_Feature","_inherits","_super","_createSuper","removeGroupControls","controls","dragControls","subscribe","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","_this$node$getProps","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","px","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","_this$props","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","add","register","didUpdate","safeToRemove","setOptions","onExitComplete","prevProps","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","remove","deregister","React__default","MeasureLayout","_usePresence","context","useContext","PresenceContext","id","useId","useEffect","usePresence","_usePresence2","LayoutGroupContext","SwitchLayoutGroupContext","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","opacity","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","p","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","latestValues","animationValues","isUpdating","isLayoutDirty","crossfade","hide","forEach","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","children","isDirty","child","sort","timeout","performance","now","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","tagName","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","Map","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","subscriptionManager","_len","args","_key","notify","_this$options","mount","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","onPlay","shouldReduceMotion","delete","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","update","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","_a","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","some","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","isMotionValue","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","rotateZ","resetValues","setStaticValue","_b","styleProp","styles","visibility","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","transformOrigin","scaleCorrectors","_scaleCorrectors$key","corrected","num","clear","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","output","mixAxis","to","roundAxis","round","DocumentProjectionNode","ref","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","shallowCompare","prev","prevLength","resolveVariant","definition","custom","resolveVariantFromProps","getCurrent","optimizedAppearDataAttribute","camelToDash","isWillChangeMotionValue","testValueType","dimensionValueTypes","degrees","vw","vh","parse","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","addValue","setTarget","resolved","makeTargetAnimatable","_ref$transitionEnd","transitionEnd","resolveFinalValueInKeyframes","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","valueTarget","HandoffAppearAnimations","hasAnimated","appearId","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","first","last","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","reversePriorityOrder","variantPriorityOrder","reverse","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","unmount","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","prevIsPresent","prevPresenceContext","exitAnimation","addHoverEvent","callbackName","HoverGesture","FocusGesture","isFocusVisible","matches","e","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","onTapStart","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","margin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","inView","tap","focus","hover","splitCSSVariableRegex","parseCSSVariable","exec","_match","getVariableValue","_parseCSSVariable","_parseCSSVariable2","token","fallback","getPropertyValue","trim","isCSSVariableToken","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","removeNonTranslationalTransform","removedTransforms","positionalValues","width","_ref3$paddingLeft","paddingLeft","_ref3$paddingRight","paddingRight","height","_ref4","_ref5","_ref5$paddingTop","paddingTop","_ref5$paddingBottom","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","indexOf","pageYOffset","convertedTarget","_ref12","_ref13","isBrowser","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","assign","_objectDestructuringEmpty","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","featureDefinitions","numFeatures","propEventHandlers","numVariantProps","variantProps","VisualElement","reducedMotionConfig","visualState","isVariantNode","isControllingVariants","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","baseTarget","initialValues","_this$scrapeMotionVal","scrapeMotionValuesFromProps","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","preloadedFeatures","initialLayoutGroupConfig","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","isEnabled","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","variants","getClosestVariantNode","startAtParent","closestVariantNode","unsubscribe","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","vars","transformValues","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parsed","HTMLVisualElement","_DOMVisualElement","defaultType","default","computedStyle","isCSSVariableName","buildHTMLStyles","childSubscription","textContent","renderHTML","SVGVisualElement","isSVGTag","camelCaseAttributes","getAttribute","buildSVGAttrs","renderSVG","_getPrototypeOf","domAnimation","renderer","Component","isSVGComponent","enableHardwareAcceleration","domMax"],"sourceRoot":""}